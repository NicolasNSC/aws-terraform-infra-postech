name: Manual workflow

on:
  workflow_dispatch:
    inputs:
      working_dir:
        description: 'Caminho do diretÃ³rio de trabalho do Terraform'
        required: true
        type: choice
        options:
          - ./rds
          - ./eks

jobs:
  terraform:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: '${{ secrets.AWS_ACCESS_KEY_ID }}'
          aws-secret-access-key: '${{ secrets.AWS_SECRET_ACCESS_KEY }}'
          aws-session-token: '${{ secrets.AWS_SESSION_TOKEN }}'
          aws-region: '${{ secrets.AWS_REGION }}'

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.8.3
      
      - name: Terraform Init
        id: init
        run: terraform init
        working-directory: '${{ github.event.inputs.working_dir }}'

      - name: Terraform Validate
        id: validate
        run: terraform validate
        working-directory: '${{ github.event.inputs.working_dir }}'

      - name: Terraform Plan
        id: plan
        run: terraform plan
        working-directory: '${{ github.event.inputs.working_dir }}'
        continue-on-error: true 

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main'
        run: terraform apply -auto-approve
        working-directory: '${{ github.event.inputs.working_dir }}'
      
      - name: Get Terraform Outputs
        id: terraform-outputs
        if: github.event.inputs.working_dir == './eks' && github.ref == 'refs/heads/main'
        run: |
          cluster_id=$(terraform output -raw cluster_id || echo "")
          echo "cluster_id=$cluster_id" >> $GITHUB_OUTPUT
        working-directory: '${{ github.event.inputs.working_dir }}'
      
      - name: Trigger API Deployment
        run: |
          # Set the required variables
          repo_owner=${{ secrets.GH_API_REPO_OWNER }}
          repo_name=${{ secrets.GH_API_REPO_NAME }}
          event_type="trigger-workflow"
          
          # Get cluster_id if available (when working_dir is ./eks)
          cluster_id="${{ steps.terraform-outputs.outputs.cluster_id }}"
          
          # Prepare payload based on whether cluster_id is available
          if [ "${{ github.event.inputs.working_dir }}" == "./eks" ] && [ -n "$cluster_id" ]; then
            payload="{\"event_type\": \"$event_type\", \"client_payload\": {\"message\": \"Trigger deploy\", \"cluster_id\": \"$cluster_id\"}}"
          else
            payload="{\"event_type\": \"$event_type\", \"client_payload\": {\"message\": \"Trigger deploy\"}}"
          fi
  
          curl -L \
            -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.PAT_GH_ACCESS_TOKEN }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/$repo_owner/$repo_name/dispatches \
            -d "$payload"

        